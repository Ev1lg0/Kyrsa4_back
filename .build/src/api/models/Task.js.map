{
  "version": 3,
  "sources": ["../../../../src/api/models/Task.ts"],
  "sourcesContent": ["import * as Sequelize from 'sequelize';\nimport { DataTypes, Model, Optional } from 'sequelize';\nimport type { Curs, CursId } from './Curs';\n\nexport interface TaskAttributes {\n  id: number;\n  CursId: number;\n  Answer1: string;\n  Answer2: string;\n  Answer3: string;\n  Answer4: string;\n  Question: string;\n  CorrectAnswer: number;\n}\n\nexport type TaskPk = \"id\";\nexport type TaskId = Task[TaskPk];\nexport type TaskOptionalAttributes = \"id\";\nexport type TaskCreationAttributes = Optional<TaskAttributes, TaskOptionalAttributes>;\n\nexport class Task extends Model<TaskAttributes, TaskCreationAttributes> implements TaskAttributes {\n  id!: number;\n  CursId!: number;\n  Answer1!: string;\n  Answer2!: string;\n  Answer3!: string;\n  Answer4!: string;\n  Question!: string;\n  CorrectAnswer!: number;\n\n  // Task belongsTo Curs via CursId\n  Cur!: Curs;\n  getCur!: Sequelize.BelongsToGetAssociationMixin<Curs>;\n  setCur!: Sequelize.BelongsToSetAssociationMixin<Curs, CursId>;\n  createCur!: Sequelize.BelongsToCreateAssociationMixin<Curs>;\n\n  static initModel(sequelize: Sequelize.Sequelize): typeof Task {\n    return Task.init({\n    id: {\n      autoIncrement: true,\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true\n    },\n    CursId: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      references: {\n        model: 'Curs',\n        key: 'id'\n      }\n    },\n    Answer1: {\n      type: DataTypes.STRING(45),\n      allowNull: false\n    },\n    Answer2: {\n      type: DataTypes.STRING(45),\n      allowNull: false\n    },\n    Answer3: {\n      type: DataTypes.STRING(45),\n      allowNull: false\n    },\n    Answer4: {\n      type: DataTypes.STRING(45),\n      allowNull: false\n    },\n    Question: {\n      type: DataTypes.STRING(512),\n      allowNull: false\n    },\n    CorrectAnswer: {\n      type: DataTypes.INTEGER,\n      allowNull: false\n    }\n  }, {\n    sequelize,\n    tableName: 'Task',\n    timestamps: false,\n    indexes: [\n      {\n        name: \"PRIMARY\",\n        unique: true,\n        using: \"BTREE\",\n        fields: [\n          { name: \"id\" },\n        ]\n      },\n      {\n        name: \"FK_Task_CursId_idx\",\n        using: \"BTREE\",\n        fields: [\n          { name: \"CursId\" },\n        ]\n      },\n    ]\n  });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,uBAA2C;AAmBpC,mBAAmB,uBAAwE;AAAA,SAgBzF,UAAU,WAA6C;AAC5D,WAAO,KAAK,KAAK;AAAA,MACjB,IAAI;AAAA,QACF,eAAe;AAAA,QACf,MAAM,2BAAU;AAAA,QAChB,WAAW;AAAA,QACX,YAAY;AAAA;AAAA,MAEd,QAAQ;AAAA,QACN,MAAM,2BAAU;AAAA,QAChB,WAAW;AAAA,QACX,YAAY;AAAA,UACV,OAAO;AAAA,UACP,KAAK;AAAA;AAAA;AAAA,MAGT,SAAS;AAAA,QACP,MAAM,2BAAU,OAAO;AAAA,QACvB,WAAW;AAAA;AAAA,MAEb,SAAS;AAAA,QACP,MAAM,2BAAU,OAAO;AAAA,QACvB,WAAW;AAAA;AAAA,MAEb,SAAS;AAAA,QACP,MAAM,2BAAU,OAAO;AAAA,QACvB,WAAW;AAAA;AAAA,MAEb,SAAS;AAAA,QACP,MAAM,2BAAU,OAAO;AAAA,QACvB,WAAW;AAAA;AAAA,MAEb,UAAU;AAAA,QACR,MAAM,2BAAU,OAAO;AAAA,QACvB,WAAW;AAAA;AAAA,MAEb,eAAe;AAAA,QACb,MAAM,2BAAU;AAAA,QAChB,WAAW;AAAA;AAAA,OAEZ;AAAA,MACD;AAAA,MACA,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,SAAS;AAAA,QACP;AAAA,UACE,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,QAAQ;AAAA,YACN,EAAE,MAAM;AAAA;AAAA;AAAA,QAGZ;AAAA,UACE,MAAM;AAAA,UACN,OAAO;AAAA,UACP,QAAQ;AAAA,YACN,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
