{
  "version": 3,
  "sources": ["../../../../src/api/models/Direction.ts"],
  "sourcesContent": ["import * as Sequelize from 'sequelize';\nimport { DataTypes, Model, Optional } from 'sequelize';\nimport type { Curs, CursId } from './Curs';\n\nexport interface DirectionAttributes {\n  id: number;\n  DirectionName: string;\n}\n\nexport type DirectionPk = \"id\";\nexport type DirectionId = Direction[DirectionPk];\nexport type DirectionOptionalAttributes = \"id\";\nexport type DirectionCreationAttributes = Optional<DirectionAttributes, DirectionOptionalAttributes>;\n\nexport class Direction extends Model<DirectionAttributes, DirectionCreationAttributes> implements DirectionAttributes {\n  id!: number;\n  DirectionName!: string;\n\n  // Direction hasMany Curs via Direction\n  Curs!: Curs[];\n  getCurs!: Sequelize.HasManyGetAssociationsMixin<Curs>;\n  setCurs!: Sequelize.HasManySetAssociationsMixin<Curs, CursId>;\n  addCur!: Sequelize.HasManyAddAssociationMixin<Curs, CursId>;\n  addCurs!: Sequelize.HasManyAddAssociationsMixin<Curs, CursId>;\n  createCur!: Sequelize.HasManyCreateAssociationMixin<Curs>;\n  removeCur!: Sequelize.HasManyRemoveAssociationMixin<Curs, CursId>;\n  removeCurs!: Sequelize.HasManyRemoveAssociationsMixin<Curs, CursId>;\n  hasCur!: Sequelize.HasManyHasAssociationMixin<Curs, CursId>;\n  hasCurs!: Sequelize.HasManyHasAssociationsMixin<Curs, CursId>;\n  countCurs!: Sequelize.HasManyCountAssociationsMixin;\n\n  static initModel(sequelize: Sequelize.Sequelize): typeof Direction {\n    return Direction.init({\n    id: {\n      autoIncrement: true,\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true\n    },\n    DirectionName: {\n      type: DataTypes.STRING(60),\n      allowNull: false\n    }\n  }, {\n    sequelize,\n    tableName: 'Direction',\n    timestamps: false,\n    indexes: [\n      {\n        name: \"PRIMARY\",\n        unique: true,\n        using: \"BTREE\",\n        fields: [\n          { name: \"id\" },\n        ]\n      },\n    ]\n  });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,uBAA2C;AAapC,wBAAwB,uBAAuF;AAAA,SAiB7G,UAAU,WAAkD;AACjE,WAAO,UAAU,KAAK;AAAA,MACtB,IAAI;AAAA,QACF,eAAe;AAAA,QACf,MAAM,2BAAU;AAAA,QAChB,WAAW;AAAA,QACX,YAAY;AAAA;AAAA,MAEd,eAAe;AAAA,QACb,MAAM,2BAAU,OAAO;AAAA,QACvB,WAAW;AAAA;AAAA,OAEZ;AAAA,MACD;AAAA,MACA,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,SAAS;AAAA,QACP;AAAA,UACE,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,QAAQ;AAAA,YACN,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
