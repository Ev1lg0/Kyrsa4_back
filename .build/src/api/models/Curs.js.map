{
  "version": 3,
  "sources": ["../../../../src/api/models/Curs.ts"],
  "sourcesContent": ["import * as Sequelize from 'sequelize';\nimport { DataTypes, Model, Optional } from 'sequelize';\nimport type { Direction, DirectionId } from './Direction';\nimport type { Results, ResultsId } from './Results';\nimport type { Task, TaskId } from './Task';\n\nexport interface CursAttributes {\n  id: number;\n  Direction: number;\n}\n\nexport type CursPk = \"id\";\nexport type CursId = Curs[CursPk];\nexport type CursOptionalAttributes = \"id\";\nexport type CursCreationAttributes = Optional<CursAttributes, CursOptionalAttributes>;\n\nexport class Curs extends Model<CursAttributes, CursCreationAttributes> implements CursAttributes {\n  id!: number;\n  Direction!: number;\n\n  // Curs hasMany Results via CursId\n  Results!: Results[];\n  getResults!: Sequelize.HasManyGetAssociationsMixin<Results>;\n  setResults!: Sequelize.HasManySetAssociationsMixin<Results, ResultsId>;\n  addResult!: Sequelize.HasManyAddAssociationMixin<Results, ResultsId>;\n  addResults!: Sequelize.HasManyAddAssociationsMixin<Results, ResultsId>;\n  createResult!: Sequelize.HasManyCreateAssociationMixin<Results>;\n  removeResult!: Sequelize.HasManyRemoveAssociationMixin<Results, ResultsId>;\n  removeResults!: Sequelize.HasManyRemoveAssociationsMixin<Results, ResultsId>;\n  hasResult!: Sequelize.HasManyHasAssociationMixin<Results, ResultsId>;\n  hasResults!: Sequelize.HasManyHasAssociationsMixin<Results, ResultsId>;\n  countResults!: Sequelize.HasManyCountAssociationsMixin;\n  // Curs hasMany Task via CursId\n  Tasks!: Task[];\n  getTasks!: Sequelize.HasManyGetAssociationsMixin<Task>;\n  setTasks!: Sequelize.HasManySetAssociationsMixin<Task, TaskId>;\n  addTask!: Sequelize.HasManyAddAssociationMixin<Task, TaskId>;\n  addTasks!: Sequelize.HasManyAddAssociationsMixin<Task, TaskId>;\n  createTask!: Sequelize.HasManyCreateAssociationMixin<Task>;\n  removeTask!: Sequelize.HasManyRemoveAssociationMixin<Task, TaskId>;\n  removeTasks!: Sequelize.HasManyRemoveAssociationsMixin<Task, TaskId>;\n  hasTask!: Sequelize.HasManyHasAssociationMixin<Task, TaskId>;\n  hasTasks!: Sequelize.HasManyHasAssociationsMixin<Task, TaskId>;\n  countTasks!: Sequelize.HasManyCountAssociationsMixin;\n  // Curs belongsTo Direction via Direction\n  Direction_Direction!: Direction;\n  getDirection_Direction!: Sequelize.BelongsToGetAssociationMixin<Direction>;\n  setDirection_Direction!: Sequelize.BelongsToSetAssociationMixin<Direction, DirectionId>;\n  createDirection_Direction!: Sequelize.BelongsToCreateAssociationMixin<Direction>;\n\n  static initModel(sequelize: Sequelize.Sequelize): typeof Curs {\n    return Curs.init({\n    id: {\n      autoIncrement: true,\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true\n    },\n    Direction: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      references: {\n        model: 'Direction',\n        key: 'id'\n      }\n    }\n  }, {\n    sequelize,\n    tableName: 'Curs',\n    timestamps: false,\n    indexes: [\n      {\n        name: \"PRIMARY\",\n        unique: true,\n        using: \"BTREE\",\n        fields: [\n          { name: \"id\" },\n        ]\n      },\n      {\n        name: \"FK_Curs_Direction_idx\",\n        using: \"BTREE\",\n        fields: [\n          { name: \"Direction\" },\n        ]\n      },\n    ]\n  });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,uBAA2C;AAepC,mBAAmB,uBAAwE;AAAA,SAkCzF,UAAU,WAA6C;AAC5D,WAAO,KAAK,KAAK;AAAA,MACjB,IAAI;AAAA,QACF,eAAe;AAAA,QACf,MAAM,2BAAU;AAAA,QAChB,WAAW;AAAA,QACX,YAAY;AAAA;AAAA,MAEd,WAAW;AAAA,QACT,MAAM,2BAAU;AAAA,QAChB,WAAW;AAAA,QACX,YAAY;AAAA,UACV,OAAO;AAAA,UACP,KAAK;AAAA;AAAA;AAAA,OAGR;AAAA,MACD;AAAA,MACA,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,SAAS;AAAA,QACP;AAAA,UACE,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,QAAQ;AAAA,YACN,EAAE,MAAM;AAAA;AAAA;AAAA,QAGZ;AAAA,UACE,MAAM;AAAA,UACN,OAAO;AAAA,UACP,QAAQ;AAAA,YACN,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
