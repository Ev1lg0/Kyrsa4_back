{
  "version": 3,
  "sources": ["../../../../src/api/models/init-models.ts"],
  "sourcesContent": ["import type { Sequelize } from \"sequelize\";\nimport { Curs as _Curs } from \"./Curs\";\nimport type { CursAttributes, CursCreationAttributes } from \"./Curs\";\nimport { Direction as _Direction } from \"./Direction\";\nimport type { DirectionAttributes, DirectionCreationAttributes } from \"./Direction\";\nimport { Profession as _Profession } from \"./Profession\";\nimport type { ProfessionAttributes, ProfessionCreationAttributes } from \"./Profession\";\nimport { Results as _Results } from \"./Results\";\nimport type { ResultsAttributes, ResultsCreationAttributes } from \"./Results\";\nimport { Role as _Role } from \"./Role\";\nimport type { RoleAttributes, RoleCreationAttributes } from \"./Role\";\nimport { Task as _Task } from \"./Task\";\nimport type { TaskAttributes, TaskCreationAttributes } from \"./Task\";\nimport { Users as _Users } from \"./Users\";\nimport type { UsersAttributes, UsersCreationAttributes } from \"./Users\";\n\nexport {\n  _Curs as Curs,\n  _Direction as Direction,\n  _Profession as Profession,\n  _Results as Results,\n  _Role as Role,\n  _Task as Task,\n  _Users as Users,\n};\n\nexport type {\n  CursAttributes,\n  CursCreationAttributes,\n  DirectionAttributes,\n  DirectionCreationAttributes,\n  ProfessionAttributes,\n  ProfessionCreationAttributes,\n  ResultsAttributes,\n  ResultsCreationAttributes,\n  RoleAttributes,\n  RoleCreationAttributes,\n  TaskAttributes,\n  TaskCreationAttributes,\n  UsersAttributes,\n  UsersCreationAttributes,\n};\n\nexport function initModels(sequelize: Sequelize) {\n  const Curs = _Curs.initModel(sequelize);\n  const Direction = _Direction.initModel(sequelize);\n  const Profession = _Profession.initModel(sequelize);\n  const Results = _Results.initModel(sequelize);\n  const Role = _Role.initModel(sequelize);\n  const Task = _Task.initModel(sequelize);\n  const Users = _Users.initModel(sequelize);\n\n  Results.belongsTo(Curs, { as: \"Cur\", foreignKey: \"CursId\"});\n  Curs.hasMany(Results, { as: \"Results\", foreignKey: \"CursId\"});\n  Task.belongsTo(Curs, { as: \"Cur\", foreignKey: \"CursId\"});\n  Curs.hasMany(Task, { as: \"Tasks\", foreignKey: \"CursId\"});\n  Curs.belongsTo(Direction, { as: \"Direction_Direction\", foreignKey: \"Direction\"});\n  Direction.hasMany(Curs, { as: \"Curs\", foreignKey: \"Direction\"});\n  Users.belongsTo(Profession, { as: \"ProfessionName_Profession\", foreignKey: \"ProfessionName\"});\n  Profession.hasMany(Users, { as: \"Users\", foreignKey: \"ProfessionName\"});\n  Users.belongsTo(Role, { as: \"id_Role\", foreignKey: \"id\"});\n  Role.hasOne(Users, { as: \"User\", foreignKey: \"id\"});\n  Results.belongsTo(Users, { as: \"User\", foreignKey: \"UserId\"});\n  Users.hasMany(Results, { as: \"Results\", foreignKey: \"UserId\"});\n\n  return {\n    Curs: Curs,\n    Direction: Direction,\n    Profession: Profession,\n    Results: Results,\n    Role: Role,\n    Task: Task,\n    Users: Users,\n  };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBAA8B;AAE9B,uBAAwC;AAExC,wBAA0C;AAE1C,qBAAoC;AAEpC,kBAA8B;AAE9B,kBAA8B;AAE9B,mBAAgC;AA8BzB,oBAAoB,WAAsB;AAC/C,QAAM,OAAO,iBAAM,UAAU;AAC7B,QAAM,YAAY,2BAAW,UAAU;AACvC,QAAM,aAAa,6BAAY,UAAU;AACzC,QAAM,UAAU,uBAAS,UAAU;AACnC,QAAM,OAAO,iBAAM,UAAU;AAC7B,QAAM,OAAO,iBAAM,UAAU;AAC7B,QAAM,QAAQ,mBAAO,UAAU;AAE/B,UAAQ,UAAU,MAAM,EAAE,IAAI,OAAO,YAAY;AACjD,OAAK,QAAQ,SAAS,EAAE,IAAI,WAAW,YAAY;AACnD,OAAK,UAAU,MAAM,EAAE,IAAI,OAAO,YAAY;AAC9C,OAAK,QAAQ,MAAM,EAAE,IAAI,SAAS,YAAY;AAC9C,OAAK,UAAU,WAAW,EAAE,IAAI,uBAAuB,YAAY;AACnE,YAAU,QAAQ,MAAM,EAAE,IAAI,QAAQ,YAAY;AAClD,QAAM,UAAU,YAAY,EAAE,IAAI,6BAA6B,YAAY;AAC3E,aAAW,QAAQ,OAAO,EAAE,IAAI,SAAS,YAAY;AACrD,QAAM,UAAU,MAAM,EAAE,IAAI,WAAW,YAAY;AACnD,OAAK,OAAO,OAAO,EAAE,IAAI,QAAQ,YAAY;AAC7C,UAAQ,UAAU,OAAO,EAAE,IAAI,QAAQ,YAAY;AACnD,QAAM,QAAQ,SAAS,EAAE,IAAI,WAAW,YAAY;AAEpD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;",
  "names": []
}
