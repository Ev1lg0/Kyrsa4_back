{
  "version": 3,
  "sources": ["../../../../src/api/models/Profession.ts"],
  "sourcesContent": ["import * as Sequelize from 'sequelize';\nimport { DataTypes, Model, Optional } from 'sequelize';\nimport type { Users, UsersId } from './Users';\n\nexport interface ProfessionAttributes {\n  id: number;\n  ProfessionName: string;\n}\n\nexport type ProfessionPk = \"id\";\nexport type ProfessionId = Profession[ProfessionPk];\nexport type ProfessionOptionalAttributes = \"id\";\nexport type ProfessionCreationAttributes = Optional<ProfessionAttributes, ProfessionOptionalAttributes>;\n\nexport class Profession extends Model<ProfessionAttributes, ProfessionCreationAttributes> implements ProfessionAttributes {\n  id!: number;\n  ProfessionName!: string;\n\n  // Profession hasMany Users via ProfessionName\n  Users!: Users[];\n  getUsers!: Sequelize.HasManyGetAssociationsMixin<Users>;\n  setUsers!: Sequelize.HasManySetAssociationsMixin<Users, UsersId>;\n  addUser!: Sequelize.HasManyAddAssociationMixin<Users, UsersId>;\n  addUsers!: Sequelize.HasManyAddAssociationsMixin<Users, UsersId>;\n  createUser!: Sequelize.HasManyCreateAssociationMixin<Users>;\n  removeUser!: Sequelize.HasManyRemoveAssociationMixin<Users, UsersId>;\n  removeUsers!: Sequelize.HasManyRemoveAssociationsMixin<Users, UsersId>;\n  hasUser!: Sequelize.HasManyHasAssociationMixin<Users, UsersId>;\n  hasUsers!: Sequelize.HasManyHasAssociationsMixin<Users, UsersId>;\n  countUsers!: Sequelize.HasManyCountAssociationsMixin;\n\n  static initModel(sequelize: Sequelize.Sequelize): typeof Profession {\n    return Profession.init({\n    id: {\n      autoIncrement: true,\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true\n    },\n    ProfessionName: {\n      type: DataTypes.STRING(45),\n      allowNull: false\n    }\n  }, {\n    sequelize,\n    tableName: 'Profession',\n    timestamps: false,\n    indexes: [\n      {\n        name: \"PRIMARY\",\n        unique: true,\n        using: \"BTREE\",\n        fields: [\n          { name: \"id\" },\n        ]\n      },\n    ]\n  });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,uBAA2C;AAapC,yBAAyB,uBAA0F;AAAA,SAiBjH,UAAU,WAAmD;AAClE,WAAO,WAAW,KAAK;AAAA,MACvB,IAAI;AAAA,QACF,eAAe;AAAA,QACf,MAAM,2BAAU;AAAA,QAChB,WAAW;AAAA,QACX,YAAY;AAAA;AAAA,MAEd,gBAAgB;AAAA,QACd,MAAM,2BAAU,OAAO;AAAA,QACvB,WAAW;AAAA;AAAA,OAEZ;AAAA,MACD;AAAA,MACA,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,SAAS;AAAA,QACP;AAAA,UACE,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,QAAQ;AAAA,YACN,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
