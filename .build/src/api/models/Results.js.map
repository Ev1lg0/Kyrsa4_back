{
  "version": 3,
  "sources": ["../../../../src/api/models/Results.ts"],
  "sourcesContent": ["import * as Sequelize from 'sequelize';\nimport { DataTypes, Model, Optional } from 'sequelize';\nimport type { Curs, CursId } from './Curs';\nimport type { Users, UsersId } from './Users';\n\nexport interface ResultsAttributes {\n  id: number;\n  UserId: number;\n  CursId: number;\n  Grade: number;\n}\n\nexport type ResultsPk = \"id\";\nexport type ResultsId = Results[ResultsPk];\nexport type ResultsOptionalAttributes = \"id\";\nexport type ResultsCreationAttributes = Optional<ResultsAttributes, ResultsOptionalAttributes>;\n\nexport class Results extends Model<ResultsAttributes, ResultsCreationAttributes> implements ResultsAttributes {\n  id!: number;\n  UserId!: number;\n  CursId!: number;\n  Grade!: number;\n\n  // Results belongsTo Curs via CursId\n  Cur!: Curs;\n  getCur!: Sequelize.BelongsToGetAssociationMixin<Curs>;\n  setCur!: Sequelize.BelongsToSetAssociationMixin<Curs, CursId>;\n  createCur!: Sequelize.BelongsToCreateAssociationMixin<Curs>;\n  // Results belongsTo Users via UserId\n  User!: Users;\n  getUser!: Sequelize.BelongsToGetAssociationMixin<Users>;\n  setUser!: Sequelize.BelongsToSetAssociationMixin<Users, UsersId>;\n  createUser!: Sequelize.BelongsToCreateAssociationMixin<Users>;\n\n  static initModel(sequelize: Sequelize.Sequelize): typeof Results {\n    return Results.init({\n    id: {\n      autoIncrement: true,\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true\n    },\n    UserId: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      references: {\n        model: 'Users',\n        key: 'id'\n      }\n    },\n    CursId: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      references: {\n        model: 'Curs',\n        key: 'id'\n      }\n    },\n    Grade: {\n      type: DataTypes.INTEGER,\n      allowNull: false\n    }\n  }, {\n    sequelize,\n    tableName: 'Results',\n    timestamps: false,\n    indexes: [\n      {\n        name: \"PRIMARY\",\n        unique: true,\n        using: \"BTREE\",\n        fields: [\n          { name: \"id\" },\n        ]\n      },\n      {\n        name: \"FK_Result_UserId_idx\",\n        using: \"BTREE\",\n        fields: [\n          { name: \"UserId\" },\n        ]\n      },\n      {\n        name: \"FK_Resuklt_Curs_idx\",\n        using: \"BTREE\",\n        fields: [\n          { name: \"CursId\" },\n        ]\n      },\n    ]\n  });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,uBAA2C;AAgBpC,sBAAsB,uBAAiF;AAAA,SAiBrG,UAAU,WAAgD;AAC/D,WAAO,QAAQ,KAAK;AAAA,MACpB,IAAI;AAAA,QACF,eAAe;AAAA,QACf,MAAM,2BAAU;AAAA,QAChB,WAAW;AAAA,QACX,YAAY;AAAA;AAAA,MAEd,QAAQ;AAAA,QACN,MAAM,2BAAU;AAAA,QAChB,WAAW;AAAA,QACX,YAAY;AAAA,UACV,OAAO;AAAA,UACP,KAAK;AAAA;AAAA;AAAA,MAGT,QAAQ;AAAA,QACN,MAAM,2BAAU;AAAA,QAChB,WAAW;AAAA,QACX,YAAY;AAAA,UACV,OAAO;AAAA,UACP,KAAK;AAAA;AAAA;AAAA,MAGT,OAAO;AAAA,QACL,MAAM,2BAAU;AAAA,QAChB,WAAW;AAAA;AAAA,OAEZ;AAAA,MACD;AAAA,MACA,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,SAAS;AAAA,QACP;AAAA,UACE,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,QAAQ;AAAA,YACN,EAAE,MAAM;AAAA;AAAA;AAAA,QAGZ;AAAA,UACE,MAAM;AAAA,UACN,OAAO;AAAA,UACP,QAAQ;AAAA,YACN,EAAE,MAAM;AAAA;AAAA;AAAA,QAGZ;AAAA,UACE,MAAM;AAAA,UACN,OAAO;AAAA,UACP,QAAQ;AAAA,YACN,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
